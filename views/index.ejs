<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>MovieWeb</title>
    <style>
        /* General page styling */
        body,
        html {
            margin: 0;
            padding: 0;
            height: 100%;
            font-family: Arial, sans-serif;
            display: flex;
            align-items: center;
            justify-content: center;
            flex-direction: column;
            position: relative;
            width: 100%;
        }

        /* Enable scrolling */
        body {
            overflow-y: auto;
        }

        /* Aura background styling */
        .aura-background {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: radial-gradient(circle at 20% 20%,
                    rgba(255, 82, 82, 0.6),
                    transparent 60%),
                radial-gradient(circle at 80% 20%,
                    rgba(82, 82, 255, 0.6),
                    transparent 60%),
                radial-gradient(circle at 50% 80%,
                    rgba(82, 255, 200, 0.6),
                    transparent 60%);
            filter: blur(80px);
            z-index: -1;
        }

        /* User header styles */
        .user-header {
            position: absolute;
            top: 20px;
            right: 20px;
            display: flex;
            align-items: center;
            color: #fff;
            cursor: pointer;
        }

        .user-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background-image: url("/images/xoaco.png");
            background-size: cover;
            background-position: center;
            margin-right: 10px;
        }

        .user-name {
            margin-right: 10px;
        }

        /* Dropdown menu styling */
        .dropdown {
            position: relative;
            display: inline-block;
        }

        .dropdown-content {
            display: none;
            position: absolute;
            top: 100%;
            right: 0;
            background-color: rgba(0, 0, 0, 0.8);
            color: #fff;
            min-width: 100px;
            border-radius: 5px;
            overflow: hidden;
            box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.3);
            z-index: 1;
        }

        .dropdown-content a {
            color: #fff;
            padding: 10px;
            text-decoration: none;
            display: block;
            text-align: left;
        }

        .dropdown-content a:hover {
            background-color: rgba(255, 20, 147, 0.5);
        }

        /* Show dropdown on hover */
        .user-header:hover .dropdown-content {
            display: block;
        }

        h1 {
            color: #fff;
            margin-bottom: 1rem;
            font-size: 4rem;
            text-align: center;
            width: 100%;
        }

        input[type="text"] {
            width: 100%;
            max-width: 600px;
            padding: 1rem;
            margin-bottom: 1.5rem;
            border: 1px solid rgba(255, 255, 255, 0.6);
            border-radius: 25px;
            font-size: 1.2rem;
            color: #fff;
            outline: none;
            background: rgba(255, 255, 255, 0.2);
            text-align: left;
            padding-left: 15px;
            transition: background 0.3s ease;
            display: block;
            margin-left: auto;
            margin-right: auto;
            box-sizing: border-box;
        }

        input[type="text"]::placeholder {
            color: rgba(255, 255, 255, 0.7);
        }

        input[type="text"]:focus {
            background: rgba(255, 255, 255, 0.3);
        }

        button {
            padding: 0.7rem 1.5rem;
            background-color: rgba(255, 105, 180, 0.5);
            color: #fff;
            border: none;
            border-radius: 25px;
            cursor: pointer;
            font-size: 1rem;
            transition: background 0.3s ease;
            display: block;
            margin: 1rem auto;
        }

        button:hover {
            background-color: rgba(255, 20, 147, 0.5);
        }

        .additional-buttons {
            display: flex;
            flex-direction: column;
            align-items: center;
            margin-top: 1rem;
            width: 100%;
        }

        .additional-buttons button {
            margin: 0.5rem 0;
            background-color: rgba(255, 182, 193, 0.5);
        }

        .additional-buttons button:hover {
            background-color: rgba(255, 105, 180, 0.5);
        }

        /* Styling for autocomplete results */
        #results {
            position: relative;
            width: 100%;
            max-width: 600px;
            background-color: white;
            color: black;
            border-radius: 8px;
            overflow-y: auto;
            max-height: 200px;
            box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.3);
            z-index: 2;
            margin-top: 10px;
        }

        .result-item {
            padding: 10px;
            cursor: pointer;
        }

        .result-item:hover {
            background-color: #ddd;
        }
    </style>
</head>

<body>
    <!-- Aura Background -->
    <div class="aura-background"></div>

    <!-- User Header with Dropdown Menu -->
    <div class="user-header">
        <div class="user-avatar"></div>
        <div class="user-name">
            <%= user.user_name %>
        </div>

        <!-- Dropdown Menu -->
        <div class="dropdown">
            <div class="dropdown-content">
                <a href="/perfil">Perfil</a>
                <a href="/logout">Logout</a>
            </div>
        </div>
    </div>

    <h1>MovieWeb</h1>

    <div class="additional-buttons">
        <button onclick="window.location.href = '/keyword'">
            Buscar por palabras clave
        </button>
        <button onclick="window.location.href = '/watchlist'">
            Lista de reproducción
        </button>
    </div>

    <form action="/buscar" method="GET" id="form" style="margin-top: 1rem">
        <input type="text" name="q" placeholder="Buscar películas o personas..." id="input" required />
        <button type="submit">Buscar</button>
        <div id="results"></div>
    </form>

    <script>
        const form = document.getElementById("form");
        const input = document.getElementById("input");
        const results = document.getElementById("results");
        let isRequestInProgress = false;
        let pendingQuery = null; // Holds the next query if user types while request is in progress

        // Form submit handler
        form.addEventListener("submit", (ev) => {
            ev.preventDefault();
            window.location.href = `/buscar?q=${encodeURIComponent(input.value)}`;
        });

        // Autocomplete logic
        input.addEventListener("input", (ev) => {
            const query = input.value;

            if (query.length === 0) {
                results.replaceChildren();
                return;
            }

            // If a request is in progress, set the pending query
            if (isRequestInProgress) {
                pendingQuery = query;
                return;
            }

            // Execute the search for the current input value
            performSearch(query);
        });

        function performSearch(query) {
            isRequestInProgress = true;
            fetch(`http://localhost:3009/api/search?q=${query}`)
                .then((response) =>
                    response.ok ? response.json() : Promise.reject(response.statusText)
                )
                .then((result) => {
                    results.replaceChildren();
                    result.forEach((item) => {
                        const div = document.createElement("div");
                        div.className = "result-item";
                        div.textContent = item.title || item.name; // Assuming API returns 'title' for movies and 'name' for people
                        results.append(div);
                        div.addEventListener("click", () => {
                            window.location.href = `/buscar?q=${encodeURIComponent(
                                div.textContent
                            )}`;
                        });
                    });
                })
                .catch((error) => {
                    console.error("Error fetching autocomplete results:", error);
                })
                .finally(() => {
                    isRequestInProgress = false;

                    // If there's a pending query, execute it now
                    if (pendingQuery !== null) {
                        const nextQuery = pendingQuery;
                        pendingQuery = null;
                        performSearch(nextQuery);
                    }
                });
        }
    </script>
</body>

</html>