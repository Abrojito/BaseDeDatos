<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>MovieWeb</title>

    <link rel="stylesheet" href="styles/index.css">
</head>

<body>
    <!-- Aura Background -->
    <div class="aura-background"></div>

    <!-- User Header -->
    <div class="user-header">
        <div class="user-avatar"></div>
        <div class="user-name">
            <%= user.user_name %>
        </div>
        <div class="tooltip">Change user</div>
        <!-- Dropdown menu -->
        <div class="dropdown">
            <div class="dropdown-content">
                <a href="/perfil">Profile</a>
                <a href="/logout">Logout</a>
            </div>
        </div>
    </div>
    <!-- Main Content -->
    <div class="main-content">
        <h1>MovieWeb</h1>
        <form action="/buscar" method="GET" class="search-form" id="form">
            <input type="text" name="q" id="input" placeholder="Search for movies, actors, or by keywords..."
                required />
            <button type="submit">Search</button>
        </form>
        <div id="results"></div>
    </div>
    <!-- Playlist Button -->
    <div class="playlist-button">
        <button onclick="window.location.href='/playlist'">My list</button>
    </div>

    <script>
        const form = document.getElementById("form");
        const input = document.getElementById("input");
        const results = document.getElementById("results");
        let isRequestInProgress = false;
        let pendingQuery = null; // Holds the next query if user types while request is in progress

        // Form submit handler
        form.addEventListener("submit", (ev) => {
            ev.preventDefault();
            window.location.href = `/buscar?q=${encodeURIComponent(input.value)}`;
        });

        // Autocomplete logic
        input.addEventListener("input", (ev) => {
            const query = input.value;

            if (query.length === 0) {
                results.replaceChildren();
                return;
            }

            // If a request is in progress, set the pending query
            if (isRequestInProgress) {
                pendingQuery = query;
                return;
            }

            // Execute the search for the current input value
            performSearch(query);
        });

        function performSearch(query) {
            isRequestInProgress = true;
            fetch(`http://localhost:3009/api/search?q=${query}`)
                .then((response) =>
                    response.ok ? response.json() : Promise.reject(response.statusText)
                )
                .then((result) => {
                    results.replaceChildren();
                    result.forEach((item) => {
                        const div = document.createElement("div");
                        div.className = "result-item";
                        div.textContent = item.title || item.name; // Assuming API returns 'title' for movies and 'name' for people
                        results.append(div);
                        div.addEventListener("click", () => {
                            window.location.href = `/buscar?q=${encodeURIComponent(
                                div.textContent
                            )}`;
                        });
                    });
                })
                .catch((error) => {
                    console.error("Error fetching autocomplete results:", error);
                })
                .finally(() => {
                    isRequestInProgress = false;

                    // If there's a pending query, execute it now
                    if (pendingQuery !== null) {
                        const nextQuery = pendingQuery;
                        pendingQuery = null;
                        performSearch(nextQuery);
                    }
                });
        }
    </script>
</body>

</html>