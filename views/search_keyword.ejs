<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>MovieWeb</title>
    <link rel="stylesheet" href="styles/search_keyword.css">
</head>
<body>
<div class="aura-background"></div>
<div class="main-content">
    <h1 class="title">MovieWeb</h1>
    <form action="/buscar" method="GET" class="search-form" id="form">
        <input type="text" name="q" placeholder="Search by keyword..." id="input" autocomplete="off" />
        <button type="button" id="search-btn">Search</button>
    </form>
    <div id="results"></div>
    <div class="home-button">
        <button onclick="window.location.href = '/'">Home</button>
    </div>
</div>

<script>
    const form = document.getElementById("form");
    const input = document.getElementById("input");
    const results = document.getElementById("results");
    let selectedIndex = -1;

    form.addEventListener("submit", (ev) => {
        ev.preventDefault();
        window.location.href = `/keyword/${input.value}`;
    });

    // Autocompletar: cada vez que se escribe en el input
    input.addEventListener("input", () => {
        if (input.value.length === 0) {
            results.replaceChildren();  // Limpiar resultados si el input está vacío
            return;
        }

        // Llamada a la API para autocompletar
        fetch(`/api/autocomplete?q=${input.value}`)
            .then(response => response.text())  // Cambiar a .text() para ver la respuesta cruda
            .then(text => {
                console.log(text);  // Ver el contenido de la respuesta
                try {
                    const result = JSON.parse(text);  // Intentar parsear el JSON manualmente
                    results.replaceChildren();  // Limpiar resultados anteriores
                    selectedIndex = -1;  // Reiniciar el índice seleccionado
                    result.forEach((keyword, index) => {
                        const div = document.createElement("div");
                        div.className = "result-item";
                        div.textContent = keyword.keyword_name;
                        div.dataset.index = index;
                        div.addEventListener("click", () => {
                            window.location.href = `/keyword/${div.textContent}`;
                        });
                        results.appendChild(div);
                    });
                } catch (e) {
                    console.error("Error al parsear la respuesta JSON:", e);  // Capturar errores de parsing
                    alert("Error al procesar los resultados de búsqueda.");
                }
            })
            .catch(error => {
                console.error("Error al obtener los resultados de búsqueda:", error);
                alert("Error al obtener los resultados de búsqueda.");
            });

    // Manejo de las teclas de flecha
    input.addEventListener("keydown", (ev) => {
        const items = Array.from(results.children);
        if (ev.key === "ArrowDown") {
            ev.preventDefault();  // Evitar que el cursor se mueva en el input
            if (selectedIndex < items.length - 1) {
                selectedIndex++;  // Mover hacia abajo
            }
            updateSelection(items);
        } else if (ev.key === "ArrowUp") {
            ev.preventDefault();  // Evitar que el cursor se mueva en el input
            if (selectedIndex > 0) {
                selectedIndex--;  // Mover hacia arriba
            }
            updateSelection(items);
        } else if (ev.key === "Enter" && selectedIndex >= 0) {
            ev.preventDefault();  // Evitar acción por defecto de Enter
            items[selectedIndex].click();  // Hacer clic en el elemento seleccionado
        }
    });

    // Función para resaltar el elemento seleccionado
    function updateSelection(items) {
        items.forEach((item, index) => {
            item.classList.toggle("selected", index === selectedIndex);
        });
        if (selectedIndex >= 0 && selectedIndex < items.length) {
            input.value = items[selectedIndex].textContent;  // Actualizar el valor del input con la selección
        }
    }

    // Manejo del botón de búsqueda
    document.getElementById("search-btn").addEventListener("click", () => {
        const query = input.value;
        if (query) {
            window.location.href = `/keyword/${query}`;
        }
    });
</script>
</body>
</html>
